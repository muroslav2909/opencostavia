# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-05 20:52
from __future__ import unicode_literals
from django.db import migrations
import logging

logger = logging.getLogger(__name__)

currencies = [
    ['GBP', 1.24925],
    ['BGN', 0.552334],
    ['PLN', 0.253335],
    ['EUR', 1.08165],
    ['NOK', 0.117982],
    ['UAH', 0.027],
    ['RON', 0.237265],
    ['DKK', 0.145446],
    ['MKD', 0.017534],
    ['HUF', 0.003478],
    ['GEL', 0.41],
    ['RSD', 0.008714],
    ['CZK', 0.039967],
    ['ILS', 0.275158],
    ['BAM', 0.553972],
    ['CHF', 1.008776],
    ['SEK', 0.1137]
]


def add_currency(apps, schema_editor):
    Currency = apps.get_model("lowcost", "Currency")
    for currency in currencies:
        try:
            cc, created = Currency.objects.get_or_create(code=currency[0], to_usd=currency[1])
        except Exception, e:
            print e


KOSOVO = "KOSOVO"
MONTENEGRO = "MONTENEGRO"
SERBIA = "SERBIA"
IZRAEL = "ІЗРАЇЛЬ"
ISLANDIYA = "ІСЛАНДІЯ"
SPAIN = "ІСПАНІЯ"
ITALY = "ІТАЛІЯ"
AZERBAYDZHAN = "АЗЕРБАЙДЖАН"
ALBANIYA = "АЛБАНІЯ"
BELGIYA = "БЕЛЬГІЯ"
BOLGARIYA = "БОЛГАРІЯ"
BOSNIYA = "БОСНІЯ І ГЕРЦЕГОВИНА"
GREESE = "ГРЕЦІЯ"
GEORGIA = "ГРУЗІЯ"
DANIYA = "ДАНІЯ"
KIPR = "КІПР"
LATVIYA = "ЛАТВІЯ"
LYTVA = "ЛИТВА"
MAKEDONIYA = "МАКЕДОНІЯ"
MALTA = "МАЛЬТА"
MOLDAVA = "МОЛДОВА"
NORVEGIYA = "НОРВЕГІЯ"
NIDERLANDY = "НІДЕРЛАНДИ"
GERMANY = "НІМЕЧЧИНА"
GB = "ОБ'ЄДНАНЕ КОРОЛІВСТВО"
EMIRATY = "ОБ'ЄДНАНІ АРАБСЬКІ ЕМІРАТИ"
POLAND = "ПОЛЬЩА"
PORTUGALIYA = "ПОРТУГАЛІЯ"
HUNGURY = "УГОРЩИНА"

COUNTRIES = ["УКРАЇНА", "РУМУНІЯ", HUNGURY, POLAND, KOSOVO, MONTENEGRO, BOLGARIYA, SERBIA, IZRAEL, ISLANDIYA, SPAIN,
             ITALY, AZERBAYDZHAN, ALBANIYA, BELGIYA,
             BOSNIYA, GREESE, GEORGIA, DANIYA, KIPR, LATVIYA, LYTVA, MAKEDONIYA, MALTA, MOLDAVA, NORVEGIYA, NIDERLANDY,
             GERMANY, GB, EMIRATY, PORTUGALIYA, "РОСІЯ", "СЛОВАКІЯ", "СЛОВЕНІЯ", "ФРАНЦІЯ", "ФІНЛЯНДІЯ",
             "ХОРВАТІЯ", "ЧЕСЬКА РЕСПУБЛІКА", "ШВЕЙЦАРІЯ"]


def add_country(apps, schema_editor):
    Country = apps.get_model("lowcost", "Country")
    for country in COUNTRIES:
        try:
            cc, created = Country.objects.get_or_create(name=country)
        except Exception, e:
            print e


AIRPORTS = {
    "KOSOVO": ["Приштина"],
    u'УГОРЩИНА': ["Дебрецен", "Будапешт"],
    "MONTENEGRO": ["Подгориця"],
    "SERBIA": ["Белград", "Ниш"],
    "ІЗРАЇЛЬ": ["Ейлат (Увда)", "Тель-Авів"],
    "ІСЛАНДІЯ": ["Рейк'явік"],
    "ІСПАНІЯ": ["Ібіца", "Аліканте", "Барселона Ель Прат", "Валенсія", "Лансароте (Канарські острови)", "Мадрид",
                 "Малага", "Пальма де Мальорка", "Сантандер", "Сарагоса", "Тенеріфе (Канарські острови)",
                 "Фуертевентура (Канарські острови)"],
    "ІТАЛІЯ": ["Альгеро (Сардинія)", "Барі", "Болон'я", "Венеція Тревізо", "Верона", "Катанія (Сицилія)",
                "Ламеція-Терме", "Мілан Бергамо", "Мілан Мальпенса", "Неаполь", "Перуджа", "Пескара",
                "Піза (Тоскана)", "Рим Ф'юмічіно", "Рим Чампіно", "Турин"],
    "АЗЕРБАЙДЖАН": ["Баку"],
    "АЛБАНІЯ": ["Тирана"],
    "БЕЛЬГІЯ": ["Брюссель Шарлеруа"],
    "БОЛГАРІЯ": ["Бурґас (Чорне море)", "Варна (Чорне море)", "Софія"],
    "БОСНІЯ І ГЕРЦЕГОВИНА": ["Сараєво", "Тузла"],
    "ГРЕЦІЯ": ["Іракліон (Кріт)", "Закінф", "Корфу", "Родос", "Салоніки"],
    "ГРУЗІЯ": ["Кутаїсі"],
    "ДАНІЯ": ["Біллунн", "Копенгаґен"],
    "КІПР": ["Ларнака"],
    "ЛАТВІЯ": ["Рига"],
    "ЛИТВА": ["Вільнюс", "Каунас", "Паланга – Клайпеда"],
    "МАКЕДОНІЯ": ["Охрид", "Скоп'є"],
    "МАЛЬТА": ["Мальта"],
    "МОЛДОВА": ["Кишинів"],
    "НОРВЕГІЯ": ["Берген", "Гауґесун", "Крістіансанн", "Молде", "Олесунн", "Осло Саннефіорд Торп", "Ставангер",
                  "Тронхейм"],
    "НІДЕРЛАНДИ": ["Гронінген", "Ейндховен", "Маастріхт"],
    "НІМЕЧЧИНА": ["Берлін Шенефельд", "Гамбург", "Ганновер", "Дортмунд", "Карлсруе/Баден-Баден", "Кельн",
                   "Меммінґен/Мюнхен Вест", "Нюрнберг", "Франкфурт Хан", "Франкфурта-на-Майні", "Фрідріхсхафен"],
    "ОБ'ЄДНАНЕ КОРОЛІВСТВО": ["Абердин", "Белфаст", "Бристоль", "Бірмінгем", "Глазго", "Донкастер/Шефілд",
                               "Лондон Лутон", "Лондон- Ґатвік", "Ліверпуль"],
    "ОБ'ЄДНАНІ АРАБСЬКІ ЕМІРАТИ": ["Дубай"],
    "ПОЛЬЩА": ["Варшава Шопен", "Вроцлав", "Гданськ", "Катовіце", "Люблін", "Ольштин-Мазури", "Познань",
                "Щецин"],
    "ПОРТУГАЛІЯ": ["Лісабон", "Порту", "Фару"],
    "РОСІЯ": ["Москва Внуково"],
    "РУМУНІЯ": ["Бухарест", "Клуж-Напока", "Констанца", "Крайова", "Сату-Маре", "Сучава", "Сібіу",
                 "Тиргу-Муреш", "Тімішоара", "Ясси"],
    "СЛОВАКІЯ": ["Братислава", "Кошице", "Попрад-Татри"],
    "СЛОВЕНІЯ": ["Любляна"],
    "УКРАЇНА": ["Kiev - Borispol", "Київ Жуляни", "Львів"],
    "ФРАНЦІЯ": ["Bordeaux", "Базель-Мюльхаус-Фрайбург", "Гренобль", "Ліонський аеропорт імені Сент-Екзюпері",
                 "Ніцца", "Париж Бове"],
    "ФІНЛЯНДІЯ": ["Турку"],
    "ХОРВАТІЯ": ["Осієк", "Спліт"],
    "ЧЕСЬКА РЕСПУБЛІКА": ["Брно", "Прага"],
    "ШВЕЙЦАРІЯ": ["Базель-Мюльхаус-Фрайбург", "Женева"],
    "ШВЕЦІЯ": ["Аеропорт у Гетеборзі", "Векше", "Мальме", "Стокгольм Скавста"]
}


def add_airport(apps, schema_editor):
    Country = apps.get_model("lowcost", "Country")
    Airport = apps.get_model("lowcost", "Airport")
    for country in COUNTRIES:
        c = Country.objects.get(name=country)
        for airport in AIRPORTS[country]:
            try:
                aa, created = Airport.objects.get_or_create(name=airport, country=c)
            except Exception, e:
                print e


class Migration(migrations.Migration):
    dependencies = [
        ('lowcost', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(add_currency, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(add_country, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(add_airport, reverse_code=migrations.RunPython.noop),
    ]
